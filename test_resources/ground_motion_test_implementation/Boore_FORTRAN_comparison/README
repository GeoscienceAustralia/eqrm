This directory contains the FORTRAN code and associated files from
[www.daveboore.com] website.  The FORTRAN has been modified slightly
to get it to compile.  The Makefile will compile the FORTRAN.

The file nga_gm_tmr.for contains the harness that reads a CTL file
and calls the model code in nga_gm_tmr_subs.for.  The harness code
has been modified to print its results with more precision.  This
removes one possible source of disagreement between the FORTRAN and
python.

To run the FORTRAN with the appropriate CTL file just execute
'nga_gm_tmr' and then enter the name of the CTL file you want to use.
Note that the CTL file holds the output directory and filename.

Also here are python programs used to:
1. Generate *.ctl files for the FORTRAN
2. Convert the FORTRAN output into EQRM unittest code

The aim of the python code is to run the FORTRAN for various 
combinations of M, R, Vs30, dip, etc, and create code that will
check that EQRM produces similar results.

The make_general_ctl.py program generates *most* of a CTL file for all 
combinations of period, magnitude, etc, we require.  This is placed into
an existing CTL file (general.ctl).  This file also specifies the name
of the output file (general.out), headers, etc.  Run the nga_gm_tmr
program and give it the name of the general.ctl file.  This will
generate the general.out file which contains all input parameter
combinations and the outputs for the four models.

There are four programs used to generate unittest files for each model:
    make_Abrahamson08_unittest.py
    make_Boore08_unittest.py
    make_Campbell08_unittest.py
    make_Chiou08_unittest.py
Each of these programs is run and passed the name of the general.out file:
    python make_Boore08_unittest.py general.out > test_Boore08.py

The unittest file should run without error.  The atol and rtol values
set in the unittest files are values for which the test has passed at
least once.

The Makefile will produce all the test_*.py files from the FORTRAN data.

The *.ORIG files are original copies of the corresponding *.for files that
make it easy to see what changes have been made from the original.
